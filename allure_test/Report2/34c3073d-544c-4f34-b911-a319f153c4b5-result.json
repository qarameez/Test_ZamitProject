{"name": "test_header_facebook", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//body/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/a[1]/i[2]\"}\n  (Session info: chrome=111.0.5563.111)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x004CDCE3]\n\t(No symbol) [0x004639D1]\n\t(No symbol) [0x00374DA8]\n\t(No symbol) [0x003A019F]\n\t(No symbol) [0x003A03AB]\n\t(No symbol) [0x003CEE62]\n\t(No symbol) [0x003BAF14]\n\t(No symbol) [0x003CD57C]\n\t(No symbol) [0x003BACC6]\n\t(No symbol) [0x00396F68]\n\t(No symbol) [0x003980CD]\n\tGetHandleVerifier [0x00743832+2506274]\n\tGetHandleVerifier [0x00779794+2727300]\n\tGetHandleVerifier [0x0077E36C+2746716]\n\tGetHandleVerifier [0x00576690+617600]\n\t(No symbol) [0x0046C712]\n\t(No symbol) [0x00471FF8]\n\t(No symbol) [0x004720DB]\n\t(No symbol) [0x0047C63B]\n\tBaseThreadInitThunk [0x76487D69+25]\n\tRtlInitializeExceptionChain [0x779CB74B+107]\n\tRtlClearBits [0x779CB6CF+191]", "trace": "self = <testCases.test_zamit_hp_Items.Test_Dashboard1 object at 0x000002B5C31C0760>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_header_facebook(self):\n        time.sleep(2)\n>       test_header_facebook = self.driver.find_element(By.XPATH,\n                                                              \"//body/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/a[1]/i[2]\").is_displayed()\n\ntest_zamit_hp_Items.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:830: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002B5C31C3EB0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x76487D69+25]\\\\n\\\\tRtlInitializeExceptionChain [0x779CB74B+107]\\\\n\\\\tRtlClearBits [0x779CB6CF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//body/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/a[1]/i[2]\"}\nE         (Session info: chrome=111.0.5563.111)\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x004CDCE3]\nE       \t(No symbol) [0x004639D1]\nE       \t(No symbol) [0x00374DA8]\nE       \t(No symbol) [0x003A019F]\nE       \t(No symbol) [0x003A03AB]\nE       \t(No symbol) [0x003CEE62]\nE       \t(No symbol) [0x003BAF14]\nE       \t(No symbol) [0x003CD57C]\nE       \t(No symbol) [0x003BACC6]\nE       \t(No symbol) [0x00396F68]\nE       \t(No symbol) [0x003980CD]\nE       \tGetHandleVerifier [0x00743832+2506274]\nE       \tGetHandleVerifier [0x00779794+2727300]\nE       \tGetHandleVerifier [0x0077E36C+2746716]\nE       \tGetHandleVerifier [0x00576690+617600]\nE       \t(No symbol) [0x0046C712]\nE       \t(No symbol) [0x00471FF8]\nE       \t(No symbol) [0x004720DB]\nE       \t(No symbol) [0x0047C63B]\nE       \tBaseThreadInitThunk [0x76487D69+25]\nE       \tRtlInitializeExceptionChain [0x779CB74B+107]\nE       \tRtlClearBits [0x779CB6CF+191]\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchElementException"}, "start": 1680084125559, "stop": 1680084127587, "uuid": "9d288792-4899-4008-99b2-c7442167553d", "historyId": "6c78c82b4359dbfbc73367182684ff31", "testCaseId": "7ace81e5a786e814aa3b1c6be2e376e7", "fullName": "test_zamit_hp_Items.Test_Dashboard1#test_header_facebook", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "suite", "value": "test_zamit_hp_Items"}, {"name": "subSuite", "value": "Test_Dashboard1"}, {"name": "host", "value": "M061"}, {"name": "thread", "value": "32644-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_zamit_hp_Items"}]}